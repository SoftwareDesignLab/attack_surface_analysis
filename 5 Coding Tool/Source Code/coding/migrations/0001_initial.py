# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2020-05-29 20:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CodingTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default=b'', max_length=50)),
                ('title', models.CharField(default=b'', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('consequences', models.TextField(blank=True, null=True)),
                ('mitigation', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CVE',
            fields=[
                ('cve_id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('published_date', models.CharField(max_length=10)),
                ('references', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImpactedFilePatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.TextField()),
                ('case_study', models.CharField(max_length=30)),
                ('total_added', models.IntegerField()),
                ('total_removed', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='NvdCWE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=b'', max_length=100)),
                ('summary', models.TextField()),
                ('abstraction', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_to', models.CharField(blank=True, max_length=15, null=True)),
                ('search_query_id', models.CharField(max_length=4)),
                ('url', models.CharField(blank=True, max_length=2000, null=True)),
                ('publication_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('doi', models.CharField(blank=True, max_length=200, null=True)),
                ('year', models.CharField(max_length=5)),
                ('author', models.CharField(blank=True, max_length=5000, null=True)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('venue', models.CharField(blank=True, max_length=100, null=True)),
                ('abstract', models.CharField(blank=True, max_length=100, null=True)),
                ('keywords', models.CharField(blank=True, max_length=100, null=True)),
                ('num_pages', models.IntegerField(default=0)),
                ('library_source', models.CharField(max_length=100)),
                ('match_our_criteria', models.CharField(blank=True, choices=[(b'Yes', b'Yes'), (b'No', b'No')], max_length=3, null=True)),
                ('is_analyzed', models.BooleanField(default=False)),
                ('exclusion_rationale', models.TextField(blank=True, null=True)),
                ('overlapping_tags', models.TextField(blank=True, null=True)),
                ('other_notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChromiumVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'Chromium Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='DrupalVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'Drupal Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='FirefoxVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'Firefox Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='OfBizVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'Apache OfBiz Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='OpenMRSVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'OpenMRS Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='PidginVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'Pidgin Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='ThunderbirdVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'Thunderbird Vulnerabilities',
            },
        ),
        migrations.CreateModel(
            name='WordpressVulnerability',
            fields=[
                ('cve', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='coding.CVE')),
                ('commit_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('bugtrack_url', models.TextField(blank=True, max_length=5000, null=True)),
                ('cve_type', models.CharField(blank=True, choices=[(b'RELATED', b'PLUGIN-RELATED'), (b'NON-RELATED', b'NON-RELATED TO PLUGINS/EXTENSIONS/ADD-ONs'), (b'VAGUE', b'VAGUE'), (b'EXTERNAL', b'EXTERNAL'), (b'DEPRECATED', b'DEPRECATED'), (b'DUPLICATED', b'DUPLICATED')], max_length=20, null=True)),
                ('context', models.TextField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('is_pattern_analyzed', models.BooleanField(default=False)),
                ('boundary_violation_rationale', models.TextField(blank=True, null=True, verbose_name=b'What it is your rationale behind your decision of being/not being a trust boundary violation?')),
                ('is_included', models.BooleanField(default=False)),
                ('concepts', models.ManyToManyField(blank=True, to='coding.Concept')),
                ('location_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.CodingTag')),
            ],
            options={
                'verbose_name_plural': 'Wordpress Vulnerabilities',
            },
        ),
        migrations.AddField(
            model_name='impactedfilepatch',
            name='cve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coding.CVE'),
        ),
        migrations.AddField(
            model_name='cve',
            name='cwe_tag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coding.NvdCWE'),
        ),
    ]
